#
# Limit of memory used to store tuples to 100MB
# (0.1 GB)
# This effectively limits the memory, used by
# Tarantool. However, index and connection memory
# is stored outside the slab allocator, hence
# the effective memory usage can be higher (sometimes
# twice as high).
slab_alloc_arena = 0.1

#
# Store the pid in this file. Relative to
# startup dir.
pid_file = "test.pid"

#
# Pipe the logs into the following process.
logger="cat - >> tarantool-test.log"

#
# Read only and read-write port.
primary_port = 33313

#
# Read-only port.
secondary_port = 33314

#
# The port for administrative commands.
admin_port = 33315

#
# Each write ahead log contains this many rows.
# When the limit is reached, Tarantool closes
# the WAL and starts a new one.
rows_per_wal = 50000

#
# Define a simple space with 1 HASH-based
# primary key.
space[123].enabled = 1
space[123].index[0].type = "HASH"
space[123].index[0].unique = 1
space[123].index[0].key_field[0].fieldno = 0
space[123].index[0].key_field[0].type = "NUM"

space[123].index[1].type = "TREE"
space[123].index[1].unique = 0
space[123].index[1].key_field[0].fieldno = 1
space[123].index[1].key_field[0].type = "STR"
space[123].index[1].key_field[1].fieldno = 2
space[123].index[1].key_field[1].type = "NUM"

space[124].enabled = 1
space[124].index[0].type = "TREE"
space[124].index[0].unique = 1
space[124].index[0].key_field[0].fieldno = 0
space[124].index[0].key_field[0].type = "NUM"
space[124].index[0].key_field[1].fieldno = 1
space[124].index[0].key_field[1].type = "NUM"


#
# working directory (daemon will chdir(2) to it)
work_dir = "/tmp/"